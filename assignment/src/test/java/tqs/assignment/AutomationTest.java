package tqs.assignment;// Generated by Selenium IDE
import io.github.bonigarcia.seljup.SeleniumJupiter;
import org.junit.jupiter.api.*;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.CoreMatchers.is;

import org.junit.jupiter.api.extension.ExtendWith;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.Keys;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.web.server.LocalServerPort;

@ExtendWith(SeleniumJupiter.class)
@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT)
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class AutomationTest {

  private static WebDriver driver;

  @LocalServerPort
  private int port;

  @BeforeAll
  static void setUp() {
    driver = new ChromeDriver();
  }

  @AfterAll
  static void tearDown() {
    driver.quit();
  }

  @Test
  @Order(1)
  public void verifyTile() {
    driver.get("http://localhost:" + port + "/air_quality/");
    driver.manage().window().setSize(new Dimension(1058, 809));
    assertThat(driver.getTitle(), is("Welcome to TqsAirQuality"));
    assertThat(driver.findElement(By.cssSelector(".fw-light")).getText(), is("Tqs Air Quality"));

  }

  @Test
  @Order(2)
  public void givenValidLocation_Lisbon(){
    driver.findElement(By.cssSelector(".input")).click();
    driver.findElement(By.cssSelector(".input")).sendKeys("lisbon");
    driver.findElement(By.cssSelector(".input")).sendKeys(Keys.ENTER);
    assertThat(driver.getTitle(), is("Details"));
    assertThat(driver.findElement(By.id("city_name")).getText(), is("Entrecampos, Lisboa, Portugal"));
    assertThat(driver.findElement(By.id("city_geo")).getText(), is("Geo: 38.75, -9.15"));
  }

  @Test
  @Order(3)
  public void givenInvalidLocation(){
    driver.findElement(By.cssSelector(".input")).click();
    driver.findElement(By.cssSelector(".input")).sendKeys("invalidcity");
    driver.findElement(By.cssSelector(".input")).sendKeys(Keys.ENTER);
    assertThat(driver.findElement(By.cssSelector(".invalid_city_country")).getText(), is("No air quality data for city/country: invalidcity"));

  }

  @Test
  @Order(3)
  public void getStatistics(){
    driver.findElement(By.linkText("Cache Statistics")).click();
    assertThat(driver.getTitle(), is("Statistics"));
    assertThat(driver.findElement(By.cssSelector(".container > h1")).getText(), is("Cache Statistics"));
  }

  @Test
  @Order(4)
  public void givenValidGeo(){
    driver.findElement(By.cssSelector(".form-select-sm")).click();
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".form-select-sm"));
      dropdown.findElement(By.xpath("//option[. = 'Geo']")).click();
    }
    driver.findElement(By.cssSelector(".form-select-sm")).click();
    driver.findElement(By.cssSelector(".input")).click();
    driver.findElement(By.cssSelector(".input")).sendKeys("32.65, -16.92");
    driver.findElement(By.cssSelector(".sub_btn")).click();
    assertThat(driver.findElement(By.id("city_name")).getText(), is("São Gonçalo, Funchal, Portugal"));
    assertThat(driver.findElement(By.id("city_geo")).getText(), is("Geo: 32.65, -16.92"));

  }

  @Test
  @Order(5)
  public void givenInvalidGeoCoor_thenErrorPage(){

    driver.findElement(By.cssSelector(".input")).click();
    driver.findElement(By.cssSelector(".form-select-sm")).click();
    {
      WebElement dropdown = driver.findElement(By.cssSelector(".form-select-sm"));
      dropdown.findElement(By.xpath("//option[. = 'Geo']")).click();
    }
    driver.findElement(By.cssSelector(".form-select-sm")).click();
    driver.findElement(By.cssSelector(".input")).click();
    driver.findElement(By.cssSelector(".input")).sendKeys("invalid geo");
    driver.findElement(By.cssSelector(".sub_btn")).click();
    assertThat(driver.getTitle(), is("Error"));
    assertThat(driver.findElement(By.cssSelector(".display-1")).getText(), is("400"));
    assertThat(driver.findElement(By.cssSelector(".display-3")).getText(), is("Illegal Arguments! Geo coordinates must be numbers!"));
    driver.close();
  }
}
